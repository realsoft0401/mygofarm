// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "用户根据用户名、密码登录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户登录相关接口"
                ],
                "summary": "用户登录接口",
                "parameters": [
                    {
                        "description": "req",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mygofarm_Models_User.LoginModelHandler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response._ResponsePostList"
                        }
                    }
                }
            }
        },
        "/signadd": {
            "post": {
                "description": "用户ID、名称、密码、性别、Emaill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户注册接口"
                ],
                "summary": "用户注册接口",
                "parameters": [
                    {
                        "description": "req",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mygofarm_Models_User.SignModelHandler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response._ResponsePostList"
                        }
                    }
                }
            }
        },
        "/signdel": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "用户主键ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户删除接口"
                ],
                "summary": "用户删除接口",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer 用户令牌",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "req",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.SignDelModelHandler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response._ResponsePostList"
                        }
                    }
                }
            }
        },
        "/signone": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "用户主键ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "获取单个用户信息接口"
                ],
                "summary": "获取单个用户信息接口",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer 用户令牌",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "req",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mygofarm_Models_User.GetoneUserModelHandler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response._ResponsePostList"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Response.ResCode": {
            "type": "integer",
            "enum": [
                1000,
                1001,
                1002,
                1003,
                1004,
                1005,
                1006,
                1007,
                1008
            ],
            "x-enum-varnames": [
                "CodeSuccess",
                "CodeInvalidParams",
                "CodeUserExist",
                "CodeUserNotExist",
                "CodeInvalidPassword",
                "CodeServerBusy",
                "CodeInvalidToken",
                "CodeInvalidAuthFormat",
                "CodeNotLogin"
            ]
        },
        "Response._ResponsePostList": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "业务响应状态码",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Response.ResCode"
                        }
                    ]
                },
                "data": {
                    "description": "数据",
                    "type": "string"
                },
                "message": {
                    "description": "提示信息",
                    "type": "string"
                }
            }
        },
        "User.SignDelModelHandler": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id 用户主键ID",
                    "type": "integer"
                }
            }
        },
        "mygofarm_Models_User.GetoneUserModelHandler": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id 用户主键ID",
                    "type": "integer"
                }
            }
        },
        "mygofarm_Models_User.LoginModelHandler": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "Password description",
                    "type": "string"
                },
                "username": {
                    "description": "Username description",
                    "type": "string"
                }
            }
        },
        "mygofarm_Models_User.SignModelHandler": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email 用户email",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender 用户性别",
                    "type": "string"
                },
                "password": {
                    "description": "Password 用户密码",
                    "type": "string"
                },
                "repassword": {
                    "description": "RePassword 二次密码验证",
                    "type": "string"
                },
                "userid": {
                    "description": "UserId 用户ID",
                    "type": "integer"
                },
                "username": {
                    "description": "Username 用户名称",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
